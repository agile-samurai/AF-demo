---
version: '3.7'

services:
  sector-ui:
    image: records/sector-ui
    restart: on-failure
    depends_on:
      - ui-backend
    ports:
      - "9091:80"
    environment:
      - SERVER_URL=ui-backend:8080
    volumes:
      - ./ui/sector-ui/build:/build

  ui-backend:
    image: records/ui-backend
    container_name: ui-backend
    depends_on:
      - elastic
      - spacy
    restart: on-failure
    ports:
      - "8082:8080"
      - "5004:5000"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-local}
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - ELASTICSEARCH_HOST=http://elastic
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_CLUSTERNAME=docker-cluster
      - AWS_DOSSIER_STORAGE_NAME=local-dossier-storage-${AWS_DOSSIER_STORAGE_NAME}

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    restart: on-failure
    volumes:
      - "./es-data:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      cluster.name: elasticsearch
      discovery.type: single-node

  data-science-service:
    image: ugroup/data-science-service
    container_name: data-science-service
    ports:
      - "8083:8000"
    environment:
      - CONTRACT_TEST=false
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  spacy:
      image: jgontrum/spacyapi:en_v2
      ports:
        - "8084:80"
volumes:
  es-data:
